{"mappings":"AAAC,CAAA,SAAU,OAAM,EAAE,SAAQ;IACzB,SAAS,uBAAuB,QAC9B,OAAO,6BACP,OAAO,gCACP,kBAAkB,0BAClB,YAAY,sBACZ,eAAe,gDACf,iBAAiB,mBACjB,eAAe,sBACf,iBAAiB,YACjB,OAAO,aACP,SAAS,eACT,QAAQ,QACT,GAAG,CAAC,CAAC;QACJ,yBAAyB;QACzB,MAAM,QAAQ,UAAS,aAAa,CAAC;QACrC,MAAM,WAAW,GAAG,CAAC;;;gBAGT,EAAE,OAAO;eACV,EAAE,MAAM;;;oBAGH,EAAE,aAAa;;;;;;;0BAOT,EAAE,gBAAgB;eAC7B,EAAE,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA+BvB,CAAC;QACD,UAAS,IAAI,CAAC,WAAW,CAAC;QAE1B,iDAAiD;QACjD,MAAM,gBAAgB,UAAS,aAAa,CAAC;QAC7C,cAAc,EAAE,GAAG;QACnB,cAAc,IAAI,GAAG;QACrB,cAAc,MAAM,GAAG,UAAU,uBAAuB;QAExD,qFAAqF;QACrF,IAAI,WAAW;QACf,IAAI,KAAK,UAAU,CAAC,QAClB,4DAA4D;QAC5D,WAAW,CAAC,UAAU,EAAE,KAAK,MAAM,CAAC;aAEpC,4DAA4D;QAC5D,WAAW,CAAC,KAAK,EAAE,KAAK,MAAM,CAAC;QAGjC,cAAc,SAAS,GAAG,GAAG,SAAS,0BAA0B,EAAE,KAAK,OAAO,CAAC;QAC/E,UAAS,IAAI,CAAC,WAAW,CAAC;QAE1B,qBAAqB;QACrB,UAAS,gBAAgB,CAAC,oBAAoB;YAC5C,MAAM,cAAc,UAAS,cAAc,CAAC;YAC5C,MAAM,cAAc,UAAS,aAAa,CAAC;YAC3C,MAAM,aAAa,UAAS,aAAa,CAAC;YAE1C,IAAI,OAAO,YAAY,WAAW;YAClC,IAAI,QAAQ;YAEZ,SAAS;gBACP,MAAM,YAAY,YAAY,WAAW;gBACzC,MAAM,WAAW;gBACjB,MAAM,WAAW,KAAK,GAAG,CAAC,UAAU;gBACpC,cAAc,KAAK,CAAC,KAAK,GAAG,GAAG,YAAY,GAAG,EAAE,CAAC;gBACjD,cAAc,KAAK,CAAC,YAAY,GAAG;gBACnC,cAAc,KAAK,CAAC,SAAS,GAAG,CAAC,MAAM,EACrC,WAAW,EACZ,qBAAqB,CAAC;gBAEvB,IAAI,UAAU,KAAK,MAAM,EAAE;oBACzB,cAAc,KAAK,CAAC,YAAY,GAAG;oBACnC,cAAc,KAAK,CAAC,SAAS,GAAG,CAAC,4BAA4B,CAAC;oBAC9D,cAAc,KAAK,CAAC,KAAK,GAAG;oBAC5B,KAAK,UAAU,CAAC,SACX,YAAY,KAAK,CAAC,WAAW,GAAG,MAChC,WAAW,KAAK,CAAC,WAAW,GAAG;gBACtC;YACF;YAEA,SAAS;gBACP,IAAI,QAAQ,KAAK,MAAM,EAAE;oBACvB,MAAM,gBAAgB,KAAK,KAAK,CAAC;oBACjC,YAAY,SAAS,GAAG,CAAC,oDAAoD,EAC3E,aAAa,CAAC,EAAE,CACjB,OAAO,EAAE,cAAc,KAAK,CAAC,IAAI;oBAClC;oBACA;oBACA,WAAW;wBACT,YAAY,WAAW,GAAG,KAAK,KAAK,CAAC;oBACvC,GAAG;gBACL,OACE,cAAc;YAElB;YAEA,WAAW;gBACT,MAAM,YAAW,YAAY,YAAY;YAC3C,GAAG;YAEH,IAAI,gBACF,WAAW;gBACT,cAAc,KAAK,CAAC,OAAO,GAAG;YAChC,GAAG;QAEP;IACF;IAEA,QAAO,sBAAsB,GAAG;AAClC,CAAA,EAAG,QAAQ","sources":["Library/floatingIcon/src/floatingicon.js"],"sourcesContent":["(function (window, document) {\n  function createFloatingIconLink({\n    icon = \"fa-brands fa-github\", // Default FontAwesome icon\n    text = \"Open Source\", // Default text\n    backgroundColor = \"transparent\", // Default background color\n    textColor = \"#000\", // Default text color\n    shadowEffect = \"0 4px 6px rgba(0, 0, 0, 0.1)\", // Default shadow effect\n    animationSpeed = 150, // Speed of text removal\n    initialDelay = 1000, // Delay before animation starts\n    disappearAfter = null, // Time in ms to disappear (null means no disappear)\n    link = \"#\", // Link for the element to navigate to\n    bottom = \"20px\", // Default bottom position\n    right = \"20px\", // Default right position\n  } = {}) {\n    // Inject CSS dynamically\n    const style = document.createElement(\"style\");\n    style.textContent = `\n      #floatingIconLink {\n        position: fixed;\n        bottom: ${bottom};\n        right: ${right};\n        padding: 10px;\n        border-radius: 25px;\n        box-shadow: ${shadowEffect};\n        font-size: 16px;\n        z-index: 1000;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: opacity 0.3s ease, transform 0.3s ease, width 0.3s ease, box-shadow 0.3s ease, border-radius 0.3s ease;\n        background-color: ${backgroundColor};\n        color: ${textColor};\n        width: auto;\n        overflow: hidden;\n        cursor: pointer;\n        text-decoration: none;\n      }\n\n      #floatingIconLink svg {\n        display: inline-block;  /* Ensure the SVG is inline */\n        width: 24px;\n        height: 24px;\n        margin-right: 8px; /* Space between the icon and text */\n        vertical-align: middle; /* Align with the text */\n      }\n\n      #floatingIconLink i {\n        font-size: 24px; /* Adjust icon size */\n        margin-right: 8px; /* Add space between the icon and text */\n      }\n\n      #floatingIconLink span {\n        display: inline; \n        white-space: nowrap; \n        opacity: 1;\n        transition: opacity 0.2s ease; \n      }\n\n      #floatingIconLink:hover {\n        transform: scale(1.1);\n        opacity: 0.9;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Create the element and inject it into the page\n    const buttonElement = document.createElement(\"a\");\n    buttonElement.id = \"floatingIconLink\";\n    buttonElement.href = link;\n    buttonElement.target = \"_blank\"; // Open link in new tab\n\n    // Check if icon is FontAwesome or a custom SVG/Unicode, and set the HTML accordingly\n    let iconHtml = \"\";\n    if (icon.startsWith(\"fa-\")) {\n      // If it's a FontAwesome class (e.g., \"fa-brands fa-github\")\n      iconHtml = `<i class=\"${icon}\"></i>`;\n    } else {\n      // If it's not FontAwesome, treat it as a custom SVG/Unicode\n      iconHtml = `<div>${icon}</div>`;\n    }\n\n    buttonElement.innerHTML = `${iconHtml}<span id=\"openSourceText\">${text}</span>`;\n    document.body.appendChild(buttonElement);\n\n    // Main functionality\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      const textElement = document.getElementById(\"openSourceText\");\n      const logoElement = document.querySelector(\"#floatingIconLink i\");\n      const svgElement = document.querySelector(\"#floatingIconLink svg\");\n\n      let text = textElement.textContent;\n      let index = 0;\n\n      function updateShadow() {\n        const textWidth = textElement.offsetWidth;\n        const maxWidth = 50;\n        const newWidth = Math.max(maxWidth, textWidth);\n        buttonElement.style.width = `${textWidth + 20}px`;\n        buttonElement.style.borderRadius = \"25px\";\n        buttonElement.style.boxShadow = `0 4px ${\n          newWidth / 5\n        }px rgba(0, 0, 0, 0.2)`;\n\n        if (index === text.length) {\n          buttonElement.style.borderRadius = \"50%\";\n          buttonElement.style.boxShadow = `0 4px 6px rgba(0, 0, 0, 0.1)`;\n          buttonElement.style.width = null;\n          icon.startsWith(\"fa-\")\n            ? (logoElement.style.marginRight = \"0\")\n            : (svgElement.style.marginRight = \"0\");\n        }\n      }\n\n      function removeText() {\n        if (index < text.length) {\n          const remainingText = text.slice(index);\n          textElement.innerHTML = `<span style=\"opacity: 0; transition: opacity 0.2s;\">${\n            remainingText[0]\n          }</span>${remainingText.slice(1)}`;\n          index++;\n          updateShadow();\n          setTimeout(() => {\n            textElement.textContent = text.slice(index);\n          }, 200);\n        } else {\n          clearInterval(interval);\n        }\n      }\n\n      setTimeout(() => {\n        const interval = setInterval(removeText, animationSpeed);\n      }, initialDelay);\n\n      if (disappearAfter) {\n        setTimeout(() => {\n          buttonElement.style.display = \"none\";\n        }, disappearAfter);\n      }\n    });\n  }\n\n  window.createFloatingIconLink = createFloatingIconLink;\n})(window, document);\n"],"names":[],"version":3,"file":"floatingicon.js.map"}